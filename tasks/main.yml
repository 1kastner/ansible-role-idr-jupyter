---
# tasks file for idr-jupyter

- name: jupyterhub | create jupyter directories
  become: yes
  file:
    path: "{{ item }}"
    state: directory
  with_items:
  - /etc/jupyterhub
  - /srv/jupyterhub

- name: jupyterhub | install epel repo
  become: yes
  yum:
    name: epel-release
    state: present

- name: jupyterhub | install system dependencies
  become: yes
  yum:
    name:
    - nodejs
    - npm
    # Required by ansible docker_image
    - python-docker-py
    - python36
    state: present

- name: jupyterhub | install node packages
  become: yes
  npm:
    global: yes
    name: configurable-http-proxy
    state: present

- name: jupyterhub | create base directory
  become: yes
  file:
    path: "{{ idr_jupyter_basedir }}"
    state: directory

- name: jupyterhub | install python3 packages in virtualenv
  become: yes
  pip:
    name:
    - jupyterhub==0.9.1
    - dockerspawner==0.9.1
    - jupyterhub-dummyauthenticator==0.3.1
    - jupyterhub-tmpauthenticator==0.5
    - oauthenticator==0.7.3
    state: present
    virtualenv: "{{ idr_jupyter_basedir }}/venv"
    virtualenv_command: /usr/bin/python3.6 -m venv
  notify:
  - restart jupyterhub

- name: jupyterhub | download cull idle script
  become: yes
  get_url:
    checksum: "sha256:a91f5a44073be45b10163a4c83bf32ee0cd0e29287bad060378d2ac95a4b1bfc"
    dest: "{{ idr_jupyter_basedir }}/cull_idle_servers.py"
    url: "https://raw.githubusercontent.com/jupyterhub/jupyterhub/0.9.1/examples/cull-idle/cull_idle_servers.py"

- name: jupyterhub | pull images
  become: yes
  docker_image:
    name: "{{ item }}"
    state: "present"
    force: "{{ idr_jupyter_pull_latest }}"
  with_items:
  - "{{ idr_jupyter_notebook_image }}"
  notify:
  - restart jupyterhub

- name: jupyterhub | create systemd service
  become: yes
  template:
    src: systemd-system-jupyterhub-service.j2
    dest: /etc/systemd/system/jupyterhub.service
  notify:
  - restart jupyterhub

# This may contain sensitive credentials
- name: jupyterhub | copy jupyter configuration file
  become: yes
  template:
    src: jupyterhub_config-py.j2
    dest: /etc/jupyterhub/jupyterhub_config.py
    owner: root
    group: root
    mode: "0600"
  notify:
  - restart jupyterhub

- name: jupyterhub | enable jupyterhub
  become: yes
  systemd:
    daemon_reload: yes
    enabled: yes
    name: jupyterhub.service
    state: started
